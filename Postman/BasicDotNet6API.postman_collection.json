{
	"info": {
		"_postman_id": "ed4e81ee-391a-45bf-af13-7702f0b0d7b3",
		"name": "BasicDotNet6API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api/Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"token\", pm.response.json().jwtToken);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/Login",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"Login"
					]
				}
			},
			"response": []
		},
		{
			"name": "api/User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{userName}}\",\r\n  \"password\": \"password\",\r\n  \"description\": \"this is postman test\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/User",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"User"
					]
				}
			},
			"response": []
		},
		{
			"name": "api/User/{userName}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User name code is {{userName}}\", function () {\r",
							"    pm.expect(pm.response.json().name).to.eql(pm.collectionVariables.get(\"userName\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/User/{{userName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"User",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "api/User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"userDescription\", pm.response.json().description);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{userName}}\",\r\n  \"password\": \"password\",\r\n  \"description\": \"this is postman test2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/User/{{userName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"User",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "api/User (edited)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User description contain {{userDescription}}\", function () {\r",
							"    pm.expect(pm.response.json().description)\r",
							"        .to.contains(pm.collectionVariables.get(\"userDescription\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/User/{{userName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"User",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "api/User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/User/{{userName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"User",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "api/User (deleted)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"title is not exist DB\", function () {\r",
							"    pm.expect(pm.response.json().title)\r",
							"        .to.eql(\"User: \" + pm.collectionVariables.get(\"userName\") + \" not exist DB.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/User/{{userName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"User",
						"{{userName}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "url",
			"value": "https://localhost:7235",
			"type": "default"
		},
		{
			"key": "userName",
			"value": "testname",
			"type": "default"
		},
		{
			"key": "userDescription",
			"value": ""
		}
	]
}